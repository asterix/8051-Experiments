;ASTER 01/03/2009 1545
;TO BE ASSEMBLED USING KEIL MICROVISION V3.60
;ARTIFICIAL INTELLIGENCE
;MICROCOMPUTER A

;CODE BASE COMPLETED : 02/03/2009 2120

;REV 5 LAST UPDATED 09/04/2009 2142

;3 SCREEN DISPLAY REVISION >>

;-----------------------------------------------------------------------------------
;SET THE ASSEMBLER FOR AT89S52
$NOMOD51
$INCLUDE (AT89X52.h)

;DEFINITIONS

;SBIT WR=P3^6  			;ALREADY DEFINED IN THE HEADER, SO MAKE FREE USE OF IT
;SBIT RD=P3^7
SBIT INTR=P3^2
SBIT RS=P0^7
SBIT RW=P0^6
SBIT EN=P0^5
SBIT SWA=P0^4
SBIT SWB=P0^3
SBIT SWC=P0^2
SBIT SWD=P0^1
;------------------------------------------------------------------------------------

ORG 0000H

RESET:			SJMP 0030H 

ORG 0030H

START:			NOP
			MOV SP,#10H		;RELOCATE STACK OVER 10H
								 
INIT:			MOV A,#38H		;INITIALIZATION OF HD44780
			LCALL COMMAND
			MOV A,#0CH
			LCALL COMMAND
			MOV A,#38H		;REINITIALIZATION OF HD44780 FOR CAPACITIVE CORRECTION
			LCALL COMMAND
			MOV A,#0CH
			LCALL COMMAND
			MOV A,#06H
			LCALL COMMAND
			MOV A,#01H	
			LCALL COMMAND

			MOV DPTR,#MSG1		;DISPLAY INITIAL DATA
			LCALL WRITEALL

			CLR A			;PORTS'  INIT
			MOV A,#0FFH
			MOV P3,A
			SETB P0.0
			SETB P0.1
			SETB P0.2
			SETB P0.3
			SETB P0.4
			MOV P1,A

			MOV R0,#20H		;CLEAR RAM FROM 20H TO FFH
			CLR A
CLE:			MOV @R0,A
			INC R0
			CJNE R0,#0FFH,CLE

			
			MOV T2CON,#30H		;SERIAL BAUD GENERATOR INIT 9600BPS TWI
			MOV RCAP2H,#0FFH
			MOV RCAP2L,#0DCH
			ANL PCON,#7FH
			MOV SCON,#58H

			
			MOV TCON,#01H
			MOV TMOD,#01H
			MOV IE,#93H		;INTERRUPTS ENABLE : INT0, SERIAL, TIMER0
			MOV IP,#11H
			
			SETB TR2		;START BAUD TIMER

			MOV DPTR,#MSG2
			MOV R4,#96		;LOAD DISPLAY RAM WITH FORMAT
			MOV R0,#80H
DISPD:			CLR A
			MOVC A,@A+DPTR
			MOV @R0,A
			INC R0
			INC DPTR
			DJNZ R4,DISPD
EXITDD:   		NOP


			SETB PSW.3
			MOV R0,#5FH
			CLR PSW.3
			
			MOV A,#2EH
			LCALL DISPLAY		;DOT 1		  	
			LCALL DELAYR		;ALLOW ADC0848 TO RECOVER FROM RESET
			LCALL DISPLAY		;DOT 2
			LCALL DELAYS
			LCALL DISPLAY		;DOT 3
			

ADCINIT:		MOV A,#08H		;START ADC OPERATION
			MOV 66H,A
			LCALL ADWRITE
			LCALL DELAYS		;DELAY FOR ADC0848 SETTLING
			
			LCALL DELAYS
		
			MOV TH0,#00H 		;LOAD COUNT 65536*42/1 = 3SECONDS
			MOV TL0,#00H
			MOV R4,#35		;R4 USED EXCLUSIVELY BY TIMER0 ISR
			MOV R1,#80H					
			MOV 50H,R1		;50H HOLDS CURRENT POINTER
			LCALL LCDWRITE
			SETB TR0		;START TIMER0

;-------------------------------------------------------------------------------
;*******************************************************************************
;PROGRAM MAIN
;MAIN BEGINS HERE

MAIN:	   		NOP
							 
ASCONV:			MOV A,5FH
			LCALL SCALE12
			LCALL XTOD16
			LCALL LOAD1
			
			MOV A,60H
			LCALL SCALE5
			LCALL XTOD16
			LCALL LOAD2

			MOV A,61H
			LCALL SCALE5
			LCALL XTOD16
			LCALL LOAD3

			MOV A,62H
			LCALL SCALE12
			LCALL XTOD16
			LCALL LOAD4

			MOV A,63H
			LCALL SCALE7
			LCALL XTOD16
			LCALL LOAD5	  


CHSWA:			JB SWA,CHSWB		;POLL SWITCHES
			LCALL MANSWA
CHSWB:			JB SWB,CHSWC
			LCALL MANSWB
CHSWC:			JB SWC,CHSWD
			LCALL MANSWC
CHSWD:			JB SWD,MOVEON
			LCALL MANSWD

MOVEON:			NOP
			
			
			MOV A,66H		;ADC START FOR THE CURRENT PASS
			INC A			;66H CONTAINS CURRENT CHANNEL ENABLING CODE
			CJNE A,#0DH,PROCM	;08H,09H,0AH,0BH,0CH FOR FIRST FIVE CHANNELS
			MOV A,#08H
PROCM:			LCALL ADWRITE
			MOV 66H,A

BROWNOUT:		MOV A,56H		;BATTERY A TESTED FOR > 10.00V
			CJNE A,#30H,PSAFE
			MOV SBUF,#'B'		;SEND OUT 'B' TO INDICATE POWER PROBLEM

PSAFE:			NOP


MAIN_END:		LJMP MAIN		;LOOP THE MAIN

;PROGRAM MAIN ENDS HERE
;**********************************************************************

;----------------------------------------------------------------------
;INTERRUPT SERVICE ROUTINES

;SERIAL INTERRUPT : SERIAL
;SERIAL RECEPTION OR TRANSMISSION COMPLETE
ORG 0023H
			LJMP 1000H
ORG 1000H

SERCON:			CLR TR2
			PUSH ACC
			JNB RI,TXI
			CLR RI
			MOV A,SBUF
			JB 7FH,SKIPC
			CJNE A,#34H,EXITC	;BIT 7FH SET IMPLIES CONNECTION ESTABLISHED
			MOV SBUF,#34H		;C-ACK	CONNECT ADDRESS=34H
			SETB 7FH
			SJMP EXITC
SKIPC:			CJNE A,#35H,SKIPC2	;SEND DISCONNECT AND DROP CONNECTION IF DISCONNECT IS RECEIVED
			MOV SBUF,#35H		;D-ACK  DISCONNECT ADDRESS=35H
			CLR PSW.5
			SJMP EXITC
SKIPC2:			CJNE A,#'Z',EXITC
			MOV SBUF,#'Z'
			LJMP POWERDWN		;POWER DOWN IN CASE OF BROWN OUT
TXI:			CLR TI
EXITC:			POP ACC
			SETB TR2
			NOP
			RETI
;----------------------------------------------------------------------------------------------
;EXTERNAL INTERRUPT 0: INT0
;ADC CONVERSION COMPLETE INTERRUPT
ORG 0003H
			LJMP 1200H
ORG 1200H

ADCSERVE:		NOP
			NOP
			PUSH ACC
			PUSH PSW
			SETB PSW.3
			LCALL ADREAD
			MOV @R0,A
			CJNE R0,#63H,PROC
			MOV R0,#5FH
			SJMP EXITR
PROC:			INC R0
EXITR:			CLR PSW.3
			POP PSW
			POP ACC
			RETI


;TIMER 0 INTERRUPT
;TIMER 0 USED TO GENERATE 2-3SECONDS SCREEN DISPLAY DELAY
ORG 000BH
			LJMP 1400H
ORG 1400H
TIME3:			CLR TR0
			CLR TF0
			MOV TH0,#00H
			MOV TL0,#00H
			DJNZ R4,MORE
			PUSH ACC
			PUSH PSW
			MOV R4,#35
			MOV A,50H
			ADD A,#32
			CJNE A,#0E0H,RESC
			MOV A,#80H
RESC:			MOV R1,A
			MOV 50H,A
			LCALL LCDWRITE
			POP PSW
			POP ACC
MORE:			SETB TR0
			RETI

;------------------------------------------------------------------------------------------
;------------------------------------------------------------------------------------------
;LCD ROUTINES
	
COMMAND:		LCALL READY
			CLR RW
			CLR RS
			MOV P2,A
			SETB EN
			NOP 
			CLR EN
			RET

DISPLAY:		LCALL READY
			CLR RW
			SETB RS
			MOV P2,A
			SETB EN
			NOP
			CLR EN
			RET

READY:			SETB P2.7
			CLR RS
			SETB RW
BUSY:			CLR EN
			SETB EN
			JB P2.7,BUSY
			NOP
			CLR EN
			RET

CLEARH:			MOV A,#01H		;CLEAR DISPLAY AND HOME CURSOR
			LCALL COMMAND
			RET

RSHIFTC:		MOV A,#14H		;SHIFT CURSOR RIGHT BY COUNT IN B
SHRIGHT:		LCALL COMMAND
			DJNZ B,SHRIGHT
			RET
			
WRITEALL:		CLR A			;WRITE ALL POINTED BY DPTR
			MOVC A,@A+DPTR
			JZ EXITWR
			INC DPTR
			LCALL DISPLAY
			SJMP WRITEALL
EXITWR:			NOP
			RET

LCDWRITE:		MOV A,#02H		;RAM POINTER: R1
			LCALL COMMAND
			MOV R2,#10H		;UPDATE LCD UPPER LINE
DISPU:			MOV A,@R1
			LCALL DISPLAY
			INC R1
			DJNZ R2,DISPU
LCDWRITEL:		MOV A,#0C0H		;UPDATE LCD LOWER LINE
			LCALL COMMAND			  	
			MOV R2,#10H
DISPL:			MOV A,@R1
			LCALL DISPLAY
			INC R1
			DJNZ R2,DISPL
			RET

;-------------------------------------------------------------------------------------------
;ADC0848 SUBROUTINES

ADWRITE:		MOV P1,A
			SETB RD
			SETB WR			; SET WR BAR
			NOP
			CLR WR			; CLEAR WR BAR
			NOP
			NOP
			NOP
			SETB WR			; RISING EDGE ON WR BAR
			RET

ADREAD:			SETB WR
			CLR RD			; RD BAR LOW
			NOP
			NOP
			MOV P1,#0FFH		;CONFIGURE PORT FOR INPUT::: DONT FORGET THIS							
			MOV A,P1
			NOP
			RET	
;-------------------------------------------------------------------------------------------
;SWITCH MANAGEMENT ROUTINES

;DELAY DEBOUNCE

DELAYSW:		MOV R7,#50H
			DJNZ R7,$
			RET

;SWITCH A MANAGER :: FUNCTION: MICROCOMPUTER 'A' RESET

MANSWA:			LCALL DEBOUNCE
			JB SWA,FLA
			LJMP RESET
FLA:			RET

;SWITCH B MANAGER :: FUNCTION:

MANSWB:			LCALL DEBOUNCE
FLB:			RET

;SWITCH C MANAGER :: FUNCTION:

MANSWC:			LCALL DEBOUNCE
FLC:			RET

;SWITCH D MANAGER :: FUNCTION:

MANSWD:			LCALL DEBOUNCE
FLD:			RET

;SWITCH DEBOUNCER

DEBOUNCE:		LCALL DELAYSW
			RET						

					 
;-------------------------------------------------------------------------------------------
;OTHER SUBROUTINES
;DELAY INIT
DELAYS:			MOV R7,#06H
			MOV R6,#0FFH
			MOV R5,#0FFH
			DJNZ R5,$
			DJNZ R6,$-2
			DJNZ R7,$-4
			RET

;DELAY RESET RECOVERY
DELAYR:			MOV R7,#10H
			MOV R6,#0FFH
			MOV R5,#0FFH
			DJNZ R5,$
			DJNZ R6,$-2
			DJNZ R7,$-4
			RET

;DELAY DISPLAY
DELAYD:			MOV R7,#0FFH
			DJNZ R7,$
			RET


;POWER DOWN IN CASE OF BATTERY BROWN OUT
POWERDWN:		NOP
			MOV PCON,#02H
			NOP
HALTD:			SJMP HALTD

;--------------------------------------------------------------------------------------------
;MULTIPLIES ADC INPUT WITH VOLTAGE PER STEP
SCALE12:		MOV B,#59
			MUL AB
			RET

SCALE5:			MOV B,#196
			MUL AB
			RET

SCALE7:			MOV B,#34
			MUL AB
			RET
;--------------------------------------------------------------------------------------------			
;HEX TO ASCII CONVERTER
;16 BIT HEX TO ASCII CONVERTER 
;INPUT- [B-A]   OUTPUT- [6BH,6AH,69H,68H,67H]
XTOD16:			MOV 67H,#30H
			MOV 68H,#30H
			MOV 69H,#30H
			MOV 6AH,#30H
			MOV 6BH,#30H
			CLR C
			MOV 6CH,A
			MOV 6DH,B
R10K:			MOV A,6CH
			SUBB A,#10H
			MOV 6CH,A
			MOV A,6DH
			SUBB A,#27H
			MOV 6DH,A
			INC 6BH
			JNC R10K
			DEC 6BH
			CLR C
			MOV A,6CH
			ADD A,#10H
			MOV 6CH,A
			MOV A,6DH
			ADDC A,#27H
			MOV 6DH,A
			CLR C
R1K:			MOV A,6CH
			SUBB A,#0E8H
			MOV 6CH,A
			MOV A,6DH
			SUBB A,#03H
			MOV 6DH,A
			INC 6AH
			JNC R1K
			DEC 6AH
			CLR C
			MOV A,6CH
			ADD A,#0E8H
			MOV 6CH,A
			MOV A,6DH
			ADDC A,#03H
			MOV 6DH,A
			CLR C
HUND:			MOV A,6CH
			SUBB A,#64H
			MOV 6CH,A
			MOV A,6DH
			SUBB A,#00H
			MOV 6DH,A
			INC 69H
			JNC HUND
			DEC 69H
			CLR C
			MOV A,6CH
			ADD A,#64H
			MOV 6CH,A
			CLR C
TENS:			MOV A,6CH
			MOV B,#10
			DIV AB
			ORL 68H,A
			MOV A,B
ONES:			ORL 67H,A
			RET

;--------------------------------------------------------------------------------------------
;LOAD THE TEMPORARY ASCII TO DISPLAY RAM
LOAD1: 			MOV R0,#8AH
			MOV @R0,6BH
			INC R0
			MOV @R0,6AH
			MOV 56H,@R0		;COPY FOR BROWN OUT CHECK
			INC R0
			INC R0
			MOV @R0,69H
			INC R0
			MOV @R0,68H
			RET

LOAD2:			MOV R0,#0B0H
			MOV @R0,6BH
			INC R0 
			INC R0
			MOV @R0,6AH
			INC R0
			MOV @R0,69H
			RET

LOAD3:			MOV R0,#0B5H
			MOV @R0,6BH
			INC R0 
			INC R0
			MOV @R0,6AH
			INC R0
			MOV @R0,69H
			RET

LOAD4: 			MOV R0,#9AH
			MOV @R0,6BH
			INC R0
			MOV @R0,6AH
			INC R0
			INC R0
			MOV @R0,69H
			INC R0
			MOV @R0,68H
			RET

LOAD5:			MOV R0,#0BAH
			MOV @R0,6AH
			INC R0 
			INC R0
			MOV @R0,69H
			INC R0
			MOV @R0,68H
			RET



;-------------------------------------------------------------------------------------------
;DISPLAY DATA

ORG 1F00H

MSG1:	DB 'INITIALIZING',00H
MSG2:	DB 'BATTERY A .....VBATTERY B .....V5AR  5BR  7AR   .... .... ....V A-RES 0  B-OVR 0C-UDF 0  D-UDF 0',00H
;------------------------------------------------------------------------------------------- 
;-------------------------------------------------------------------------------------------
END
