;ASTER 01/03/2009 1545
;TO BE ASSEMBLED USING KEIL MICROVISION V3.60
;ARTIFICIAL INTELLIGENCE
;MICROCOMPUTER A

;CODE BASE COMPLETED : 02/03/2009 2120

;REV 5 LAST UPDATED 09/04/2009 2142

;3 SCREEN DISPLAY REVISION >>

;-----------------------------------------------------------------------------------------------------------
;SET THE ASSEMBLER FOR AT89S52
$NOMOD51
$INCLUDE (AT89X52.h)

;DEFINITIONS

;SBIT WR=P3^6  						;ALREADY DEFINED IN THE HEADER, SO MAKE FREE USE OF IT
;SBIT RD=P3^7
SBIT INTR=P3^2
SBIT RS=P0^7
SBIT RW=P0^6
SBIT EN=P0^5
SBIT SWA=P0^4
SBIT SWB=P0^3
SBIT SWC=P0^2
SBIT SWD=P0^1
;-----------------------------------------------------------------------------------------------------------

ORG 0000H

RESET:		SJMP 0030H 

ORG 0030H

START:		NOP
			MOV SP,#10H					;RELOCATE STACK OVER 10H
								 
INIT:		MOV A,#38H					;INITIALIZATION OF HD44780
			LCALL COMMAND
			MOV A,#0CH
			LCALL COMMAND
			MOV A,#38H					;REINITIALIZATION OF HD44780 FOR CAPACITIVE CORRECTION
			LCALL COMMAND
			MOV A,#0CH
			LCALL COMMAND
			MOV A,#06H
			LCALL COMMAND
			MOV A,#01H	
			LCALL COMMAND

			MOV DPTR,#MSG1			 	;DISPLAY INITIAL DATA
			LCALL WRITEALL

			CLR A					 	;PORTS'  INIT
			MOV A,#0FFH
			MOV P3,A
			SETB P0.0
			SETB P0.1
			SETB P0.2
			SETB P0.3
			SETB P0.4
			MOV P1,A

			MOV R0,#20H				 	;CLEAR RAM FROM 20H TO FFH
			CLR A
CLE:		MOV @R0,A
			INC R0
			CJNE R0,#0FFH,CLE

			
			MOV T2CON,#30H				;SERIAL BAUD GENERATOR INIT 9600BPS TWI
			MOV RCAP2H,#0FFH
			MOV RCAP2L,#0DCH
			ANL PCON,#7FH
			MOV SCON,#58H

			
			MOV TCON,#01H
			MOV TMOD,#01H
			MOV IE,#93H				  	;INTERRUPTS ENABLE : INT0, SERIAL, TIMER0
			MOV IP,#02H
			
			SETB TR2				  	;START BAUD TIMER

			MOV DPTR,#MSG2
			MOV R4,#96			  		;LOAD DISPLAY RAM WITH FORMAT
			MOV R0,#80H
DISPD:		CLR A
			MOVC A,@A+DPTR
			MOV @R0,A
			INC R0
			INC DPTR
			DJNZ R4,DISPD
EXITDD:   	NOP


			SETB PSW.3
			MOV R0,#60H
			CLR PSW.3
			
			MOV A,#2EH
			LCALL DISPLAY				;DOT 1		  	
			LCALL DELAYR				;ALLOW ADC0848 TO RECOVER FROM RESET
			LCALL DISPLAY				;DOT 2
			LCALL DELAYS
			LCALL DISPLAY			  	;DOT 3
			

ADCINIT:	MOV A,#08H		  			;START ADC OPERATION
			MOV 66H,A
			LCALL ADWRITE
			LCALL DELAYS				;DELAY FOR ADC0848 SETTLING
			
			LCALL DELAYS
		
			MOV TH0,#00H 				;LOAD COUNT 65536*42/1 = 3SECONDS
			MOV TL0,#00H
			MOV R4,#42					;R4 USED EXCLUSIVELY BY TIMER0 ISR
			MOV R1,#80H					;50H HOLDS CURRENT POINTER
			MOV 50H,R1
			LCALL LCDWRITE
			SETB TR0					;START TIMER0

;--------------------------------------------------------------------------------------------------
;**************************************************************************************************
;PROGRAM MAIN
;MAIN BEGINS HERE

MAIN:	   	NOP
							 
ASCONV:		MOV A,60H	 				;CONVERT ALL CHANNEL INPUTS TO BCD  
			LCALL CONVERT
			LCALL LOADA			   		;LOAD THEM INTO DISPLAY RAM
			MOV A,61H
			LCALL CONVERT
			LCALL LOADB
			MOV A,62H
			LCALL CONVERT
			LCALL LOADC	

CHSWA:		JB SWA,CHSWB				;POLL SWITCHES
			LCALL MANSWA
CHSWB:		JB SWB,CHSWC
			LCALL MANSWB
CHSWC:		JB SWC,CHSWD
			LCALL MANSWC
CHSWD:		JB SWD,MOVEON
			LCALL MANSWD

MOVEON:		NOP
			
			
			MOV A,66H					;ADC START FOR THE CURRENT PASS
			INC A						;66H CONTAINS CURRENT CHANNEL ENABLING CODE
			CJNE A,#0BH,PROCM			;08H,09H,0AH FOR FIRST THREE CHANNELS
			MOV A,#08H
PROCM:		LCALL ADWRITE
			MOV 66H,A

			;LCALL DELAYD

MAIN_END:	LJMP MAIN					;LOOP THE MAIN

;PROGRAM MAIN ENDS HERE
;******************************************************************************************

;-------------------------------------------------------------------------------------------
;INTERRUPT SERVICE ROUTINES

;SERIAL INTERRUPT : SERIAL
;SERIAL RECEPTION OR TRANSMISSION COMPLETE
ORG 0023H
			LJMP 1000H
ORG 1000H

SERCON:		CLR TR2
			JNB RI,TXI
			CLR RI
			MOV A,SBUF
			JB 20H,SKIPC
			CJNE A,#0CFH,EXITC
			MOV SBUF,#9FH
			SETB 20H
			SJMP EXITC
SKIPC:		CJNE A,#0BFH,SKIPC2
			MOV SBUF,#0BFH
			CLR 20H
			SJMP EXITC
SKIPC2:		SETB 21H
			MOV SBUF,#9FH
			SJMP EXITC
TXI:		CLR TI
EXITC:		SETB TR2
			RETI

;EXTERNAL INTERRUPT 0: INT0
;ADC CONVERSION COMPLETE INTERRUPT
ORG 0003H
			LJMP 1200H
ORG 1200H

ADCSERVE:	NOP
			NOP
			SETB PSW.3
			LCALL ADREAD
			MOV @R0,A
			CJNE R0,#62H,PROC
			MOV R0,#60H
			SJMP EXITR
PROC:		INC R0
EXITR:		CLR PSW.3
			RETI


;TIMER 0 INTERRUPT
;TIMER 0 USED TO GENERATE 3SECONDS SCREEN DISPLAY DELAY
ORG 000BH
			LJMP 1400H
ORG 1400H
TIME3:		CLR TR0
			CLR TF0
			MOV TH0,#00H
			MOV TL0,#00H
			DJNZ R4,MORE
			MOV R4,#50
			PUSH ACC
			MOV A,50H
			ADD A,#32
			CJNE A,#0E0H,RESC
			MOV A,#80H
RESC:		MOV R1,A
			MOV 50H,A
			LCALL LCDWRITE
			POP ACC
MORE:		SETB TR0
			RETI

;------------------------------------------------------------------------------------------
;------------------------------------------------------------------------------------------
;LCD ROUTINES

COMMAND:	LCALL READY
			CLR RW
			CLR RS
			MOV P2,A
			SETB EN
			NOP 
			CLR EN
			RET

DISPLAY:	LCALL READY
			CLR RW
			SETB RS
			MOV P2,A
			SETB EN
			NOP
			CLR EN
			RET

READY:		SETB P2.7
			CLR RS
			SETB RW
BUSY:		CLR EN
			SETB EN
			JB P2.7,BUSY
			NOP
			CLR EN
			RET

CLEARH:		MOV A,#01H						;CLEAR DISPLAY AND HOME CURSOR
			LCALL COMMAND
			RET

RSHIFTC:	MOV A,#14H						;SHIFT CURSOR RIGHT BY COUNT IN B
SHRIGHT:	LCALL COMMAND
			DJNZ B,SHRIGHT
			RET
			
WRITEALL:	CLR A						  	;WRITE ALL POINTED BY DPTR
			MOVC A,@A+DPTR
			JZ EXITWR
			INC DPTR
			LCALL DISPLAY
			SJMP WRITEALL
EXITWR:		NOP
			RET

LCDWRITE:	MOV A,#02H					;RAM POINTER: R1
			LCALL COMMAND
			MOV R2,#10H					;UPDATE LCD UPPER LINE
DISPU:		MOV A,@R1
			LCALL DISPLAY
			INC R1
			DJNZ R2,DISPU
LCDWRITEL:	MOV A,#0C0H				  	;UPDATE LCD LOWER LINE
			LCALL COMMAND
			MOV R2,#10H
DISPL:		MOV A,@R1
			LCALL DISPLAY
			INC R1
			DJNZ R2,DISPL
			RET

;-------------------------------------------------------------------------------------------
;ADC0848 SUBROUTINES

ADWRITE:	MOV P1,A
			SETB RD
			SETB WR							; SET WR BAR
			NOP
			CLR WR							; CLEAR WR BAR
			NOP
			NOP
			NOP
			SETB WR							; RISING EDGE ON WR BAR
			RET

ADREAD:		SETB WR
			CLR RD							; RD BAR LOW
			NOP
			NOP
			MOV P1,#0FFH					;CONFIGURE PORT FOR INPUT::: DONT FORGET THIS							
			MOV A,P1
			NOP
			RET	
;-------------------------------------------------------------------------------------------
;SWITCH MANAGEMENT ROUTINES

;DELAY DEBOUNCE
DELAYSW:	MOV R7,#50H
			DJNZ R7,$
			RET

;SWITCH A MANAGER 	 :: FUNCTION: MICROCOMPUTER 'A' RESET
MANSWA:		LCALL DEBOUNCE
			JB SWA,FLA
			LJMP RESET
FLA:		RET

;SWITCH B MANAGER 	 	:: FUNCTION:
MANSWB:		LCALL DEBOUNCE
FLB:		RET

;SWITCH C MANAGER	 	:: FUNCTION:
MANSWC:		LCALL DEBOUNCE
FLC:		RET

;SWITCH D MANAGER	   	:: FUNCTION
MANSWD:		LCALL DEBOUNCE
FLD:		RET

;SWITCH DEBOUNCER
DEBOUNCE:	LCALL DELAYSW
			RET						

					 
;-------------------------------------------------------------------------------------------
;OTHER SUBROUTINES

;DELAY INIT
DELAYS:		MOV R7,#06H
			MOV R6,#0FFH
			MOV R5,#0FFH
			DJNZ R5,$
			DJNZ R6,$-2
			DJNZ R7,$-4
			RET

;DELAY RESET RECOVERY
DELAYR:		MOV R7,#10H
			MOV R6,#0FFH
			MOV R5,#0FFH
			DJNZ R5,$
			DJNZ R6,$-2
			DJNZ R7,$-4
			RET

;DELAY DISPLAY
DELAYD:		MOV R7,#0FFH
			DJNZ R7,$
			RET

			
;HEX TO ASCII CONVERTER
CONVERT:	MOV B,#100
			DIV AB
			ORL A,#30H
			MOV 63H,A
			MOV A,B
			MOV B,#10
			DIV AB
			ORL A,#30H
			MOV 64H,A
			MOV A,B
			ORL A,#30H
			MOV 65H,A
			RET
			 
;LOAD THE TEMPORARY ASCII TO DISPLAY RAM
LOADA: 		MOV 31H,63H
			MOV 32H,64H
			MOV 33H,65H
			RET

LOADB:		MOV 37H,63H
			MOV 38H,64H
			MOV 39H,65H
			RET

LOADC:		MOV 3DH,63H
			MOV 3EH,64H
			MOV 3FH,65H
			RET
;-------------------------------------------------------------------------------------------
;DISPLAY DATA

ORG 1F00H

MSG1:	DB 'INITIALIZING',00H
MSG2:	DB 'BATTERY A 00.00VBATTERY B 00.00V5AR  5BR  7AR   0.00 0.00 0.00V A-RES 0  B-OVR 0C-UDF 0  D-UDF 0',00H
;------------------------------------------------------------------------------------------- 
;-------------------------------------------------------------------------------------------
END
